import pandas as pd

一、dataframe是什么
和excel一样,是由行索引(0开始的序号)、列索引(title) 做成的表格,即行列确定一个具体的值。

Series是什么?---是由数组组成的data和index组成的索引。即每一个值对应一个index。
属性index和value 分别表示索引和值对应的array内容。

二、如何创建dataframe
由于相当于一个表格,因此由若干列组成,每一个列有一个列名,即相当于存储的是列向量,因此提供的方式也是以列向量提供
a.表示创建一列 
pd.DataFrame(["a","b","c","d","e"])

b.创建2列,因此每一个元素要提供2维向量.
d = [("a","A"),("b","B"),["c","C"],["d","D"],["e","E"]]
pd.DataFrame(d,columns=["小写","大写"],index=["一","二","三","四","五"])

注意:
1.向量可以用[]表示,也可以用元组()表示
2.添加了列名和索引,默认索引和列名都是以0开始计数的。

c.使用字典的方式创建多列
相当于告诉了列名 以及 对应的列向量 ,每一个列名和列向量组成了一个map集合
d = {"小写":["a","b","c","d","e"],"大写":["A","B","C","D","E"]} ### 字典
pd.DataFrame(d,index=["一","二","三","四","五"])

三、如何通过索引集合 
1.
print a.index ## 获取行索引
print a.columns ## 获取列索引

a.默认从0开始计数的索引
RangeIndex(start=0, stop=5, step=1)
RangeIndex(start=0, stop=1, step=1)

b.自定义索引
Index([u'一', u'二', u'三', u'四', u'五'], dtype='object')  ###说明是字符串形式
Index([u'大写', u'小写'], dtype='object')

2.设置索引列
df.set_index("c1")
df.set_index(["c1","c2"]) ### 设置索引  多个列共同为索引

3. 重置索引 常用于 数据分组和透视表中
df.reset_index() ### 取消设置的索引
df.reset_index(level = 0) ### 将第0列设置为索引
df.reset_index(drop = True) ### 将现在的索引列删除

4.重新更换行和列名字
df.rename(columns = {"c1":"cc1","c2":"cc2"},index = {0:"a",1:"b"}) ### 重置列名 和 索引名

四、数据获取---范围是[)
1.获取列
print df["c1"] ### 选择一个列
print df[["c1","c2"]] ### 选择若干个列
2.获取行
print df.iloc[0]  ## 获取第0行
print df.iloc[[0,2]] ## 获取第0、2行
print df.iloc[0:3] ## 获取第0到3行
3.根据行和列坐标获取数据
df.iloc[0:2,0:2] ### 根据行列index选择
df.iloc[0:2,:]  获取[0,2)行,所有列的数据
df.loc[0:2,["c1","c2"]] ## 根据行号、列名获取数据
4.条件筛选数据
df[ (df["c2"] >= 11) & (df["c3"] >= 22) ] ###满足c2>=11 and c3 >=22的数据
df[ (df["c2"] >= 11) & (df["c3"] >= 22) ][["c5","c6"]] ### 选择满足条件后的某2列
注意: ()必须填写
潜在含义是,df[true]的就是要的最后结果.然后再结果里面选择对应的列c5、c6.
true的计算逻辑是c2 >= 11 and c3 >= 22

五、数据类型的转换
df["c1"].dtype  ### 确定数据类型
df["c1"].astype("int64") ### float64 转换成 int64
