一、背景与总结
1.B树是一棵平衡树。可以理解成把直线分为若干段线段，当我们查找满足某个要求的点的时候，只要去查找它所属的线段即可
依我看来，这种思想其实就是先找一个大的空间，再逐步缩小所要查找的空间，最终在一个自己设定的最小不可分空间内找出满足要求的解。

2.R树场景
查找20英里以内所有的餐厅。如果没有R树你会怎么解决？
首先可能会查询经度，经度在B树里找到符合的范围，然后遍历所有的经纬度符合经度条件的商家。因为没有办法根据多个范围查询的字段一起走索引。

3.R树不代表是2维，他可以扩展到多维的，更多的是学会他解决问题的思想。
它把B树的思想很好的扩展到了多维空间，采用了B树分割空间的思想，并在添加、删除操作时采用合并、分解结点的方法，保证树的平衡性。因此，R树就是一棵用来存储高维数据的平衡树。

4.R树其实可以用聚类算法实现。
本质上也是如何聚类。

二、R树的数据结构
R树种的R，不代表区域Region，而是代表矩形(二维空间更常用)rectangle。
a.每一个商家位置由经纬度组成，那么把所有商家根据经纬度，是可以标注在一个平面上的。
b.使用矩形，将相邻的商家点框住。即叶子节点 ---- 里面包含的都是具体的数据。
c.更高层处理，进一步对叶子节点矩形，聚类，将位置相近的用更大的矩形框住。
d.以此类推，最后就是一颗树，根节点下有2个大矩形，包含了所有叶子节点。
