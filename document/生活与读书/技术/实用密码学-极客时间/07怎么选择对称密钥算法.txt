一、背景与总结
1.良好的性能，以及皮实的用法，这是我倾向于优先使用序列算法的两个基本原因。
同样，按照这两个标准，同时考虑安全强度，我建议你使用下面的对称密钥算法，按照优先级从高到低排列：
ChaCha20
AES-256
AES-128

二、常见算法
退役:DES、RC2、RC4、
遗留:3DES
现行:Camellia-128、Camellia-192、Camellia-256、AES-128、AES-192、AES-256、ChaCha20

三、加密解密是一个很快的运算
计算性能:每个字节的加密、解密运算需要大约0.5个时钟周期。即加密、解密运算是一种很快的运算。

现在的Web服务，大部分都是运行在HTTPS协议上的。在HTTPS协议通道上传输的应用数据，都是加密的数据。
和HTTP相比，客户端的响应时间没有明显的变化；服务器的吞吐量大约减少了5%到8%，CPU的使用大约增加了2%到5%。
因此数据加密会影响性能，但是这个影响并不显著。

四、序列算法和分组算法
1.分组算法:3DES和AES。
2.序列算法:RC4和ChaCha20。

在对称密钥算法里，因为输出结果的长度没有限制，对数据的处理方式，也就有了更多的想象空间。
如果我们从数据是否分组这个角度考虑，就有两种处理方式。
进行数据分组，然后按数据组运算，这就是分组算法；
不进行数据分组，按照原始数据的大小进行运算，这就是序列算法。

3.怎么计算序列算法呢？
序列算法的基本思路，就是从对称密钥里推导出一段和明文数据相同长度的密钥序列，然后密钥序列和明文进行亦或运算得到密文，和密文进行异或运算得到明文。
具体的实现方式，现在看可以忽略，暂时不用关注。