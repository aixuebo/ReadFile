一、背景与总结
1.本节要讨论的观点，是一种算法，兼容了机密性 与 完整性的方案。
以前文章，讲解的是加密算法，解决机密性的问题。
本文章，是使用hmac方法，解决完整性问题。
有没有一种加密算法，综合考虑了 完整性和机密性呢？如果有，我们就不需要额外的设计消息验证码了。


二、消息验证码和信息加密该怎么结合起来，发送给接收者。--- 怎么构造可认证的加密 Authenticated Encryption (AE) 
发送的信息内容 = 加密数据(机密性) + 消息验证码(完整性)。

加密和验证组合起来的方式不外乎三种方案。 --- 先加密还是后加密?
下面分别讲解三种方案

三、方案1 -- 加密并验证 -- 安全外壳协议（SSH）就是采用加密并验证的方案 -- 不推荐
1.过程
密文 = 明文数据加密；
消息验证码 = 使用明文数据计算消息验证码
传输 密文 + 消息验证码

2.问题
消息验证码，保护的是明文的完整性，而不是密文的完整性。
即如果明文信息相同，它的消息验证码也是相同的。
从攻击者的角度看，如果发现两个相同的消息验证码，就可以猜测明文信息大概率是相同的。

而我们一直推荐使用 不重复的 初始化向量解决安全性，因此相同的明文也会产生不同的密文。显然这个方案不够安全，虽然密文使用初始化向量解决了安全性，但攻击者可以绕开密文，而使用验证码来破译。


四、方案2 -- 加密后验证 -- IPSec协议采用的就是加密后验证的方案。--- 推荐
1.过程
密文 = 明文数据加密；
消息验证码 = 使用密文数据计算消息验证码
传输 密文 + 消息验证码

2.方案特点 -- 是一个不错的安全方案。
消息验证码，保护的是密文的完整性，由于密文是从明文演算过来的，也就间接地保护了明文的完整性。
而且加密算法把相同的明文信息加密成不相同的密文信息，它的消息验证码也就是不同的。
所以这个方案相对优秀。

五、方案3 -- 验证后加密 --- SSL协议采用的就是验证后加密的方案。 --- 不推荐
1.过程
消息验证码 = 使用明文数据计算消息验证码
密文 = 明文数据+消息验证码，一起加密；
传输 密文

2.特点
消息验证码，保护的是明文的完整性。
攻击者只能拿到密文，不能从中简单的拆分出消息验证码，所以更为安全。

但如果我们把明文信息和消息验证码看作是一个数据，我们前面提到的CBC攻击方案是不是似乎又回来了？实际的攻击方案比我们前面讨论的复杂。

六、带关联数据的加密 -- 带关联的认证加密  Authenticated Encryption with Associated Data（AEAD）
1.到目前为止，我们都没有讨论，信息是怎么传递给对方的。
因为我们知道最终要传递出去的数 密文 + 验证码，但其中还需要很多明文信息，这些信息是以什么格式传递出去的呢。

加密 = AEAD(明文+关联信息+密钥) --> 密文信息 + 验证标签。
解密 = AEAD(关联信息+密文+验证标签+密钥) --> 明文信息

2.特点
a.加密:
明文变化，密文信息 和 验证标签都会发生变化。解决了明文信息的完整性问题。
关联信息变化，验证标签会发生变化，解决了关联信息的验证问题。即关联信息的完整性问题。

b.解密
如果密文信息或者关联信息验证失败，明文信息不会输出。换句话说，只有明文信息和关联信息的完整性都得到验证，才会有明文信息输出。


