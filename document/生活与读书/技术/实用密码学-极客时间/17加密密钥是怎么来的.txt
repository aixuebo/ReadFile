一、背景与总结
1.密钥是加密算法的输入，非常重要的输入，但一个好的对称密钥应该满足什么条件?
即我们去哪里才能够找到长度和强度都符合要求的密钥。

2.安全的密钥生产逻辑
a.准备条件
先明确一个安全的对称密钥A。
口令
b.口令初始化，要将B存储到磁盘上
函数(用户口令) ---> 推导出密钥X；
公开加密算法(密钥X+,安全的密钥A) --> 安全的密钥B --> 密钥B存储到磁盘上。
c.每次加密过程
函数(用户口令) ---> 推导出密钥X；
公开加密算法(密钥X+,安全的密钥B) --> 解密成安全的密钥A 
使用密钥A进行加密。
d.口令变更。
函数(老用户口令) ---> 推导出密钥X；
公开加密算法(密钥X+,安全的密钥B) --> 解密成安全的密钥A 

然后用新口令做 “口令初始化b”的动作


二、合理的对称密钥
1.对称密钥的长度
一般来说，一个对称密钥算法的密钥长度是固定的，即对称密钥的长度是由对称密钥算法确定的。选择了哪个算法,就要有对应的密钥长度的密钥。
AES-128算法要求密钥长度128位。
AES-256算法要求密钥长度256位。

如果两个不同的算法，使用的密钥长度是相同的，那可以将同一个密钥用于不同的算法吗？
答案是不推荐，因为考虑到某一个算法的破解风险，比如A算法被破解了，因此密钥就不安全了，因此不安全的密钥 用于B算法，肯定B算法也不安全了。
因此推荐的是 不同算法，使用不同的密钥。

2.对称密钥的强度
虽然AES-128算法的安全强度是128位，AES-256算法的安全强度是256位。可是，如果没有高质量的对称密钥，这样的安全强度就没有意义。
举个例子，如果密钥只能是阿拉伯数字，那么128位的密钥就只有10^16种可能性。
所以，对称密钥的强度一定要和加密算法的强度匹配。比如说吧，AES-128算法需要128位的密钥，这个密钥就要有128位的强度。

3.密钥在它的长度上要均匀分布。
也就是说，这个密钥的每一位是0还是1的概率都是50%。如果不能做到均匀分布，就会降低密钥的安全性。比如说，我们前面提到的阿拉伯数字的密钥，就是密钥没有做到均匀分布，导致安全强度降低的例子。

4.密钥生成机制产生的密钥要随机。
下一个密钥要均匀分布，而且不可预测。

三、我们去哪里才能够找到长度和强度都符合要求的密钥
1.密钥一定要有秘密。
秘密两个来源:
a.用户持有的秘密；
用户口令:强度不够。
用户指纹、虹膜信息:可以被复制。
保守这样的秘密是一个极具挑战的任务。

b.计算机持有的秘密。

2.如何基于用户的口令生成对称密钥
使用弱的口令来保护强的密钥，然后使用强的密钥来保护私密数据。

因为如果加密后的数据被泄露了，但由于他是强密钥加密的，因此不用担心加密数据被破解的问题。
但问题是 强密钥为什么可以通过弱口令来生产。

因为口令，主要用于身份认证和衍生密钥，即通过口令确认身份信息，有了明确身份信息后，口令作为函数的输入，生成强密钥。
相同的口令可以得到唯一的密钥，因此密钥是不需要被保存的，随时都可以被函数生产。
因为身份认证和密钥衍生，都不是高频次的运算。
这些措施，都降低了口令破解带来的数据泄漏风险。


使用口令生成对称密钥的办法，通常成为“基于口令的密钥推导”。现在常用的基于口令的密钥推导算法是PBKDF2。我不在这里讲这个算法的细节了，你可以自己去找一找相关的规范。

3.口令的安全强度不够，很容易被破解，我们需要经常地变换口令，带来了一些问题
因为口令变化，导致加密密钥变化，那以前用老加密密钥加密的数据，都需要用老密钥解密，然后用新密钥再加密。这个成本太大了，而且也不可行。

优化流程:
优化前: PBKDF2(口令+slat) --> 对称密钥 --> 加密算法(对称密钥,明文) --> 密文。
优化后: 
a.用随机数创建一个安全强度高的对称密钥A。 所有的数据加密都是使用该密钥进行加密。
b.PBKDF2(口令+slat) --> 对称密钥 --> 加密算法(对称密钥,安全的对称密钥A) --> 加密密钥密文B。存储起来。
c.每次需要加密时，通过 口令可以推导出对称密钥，即 PBKDF2(口令+slat) --> 对称密钥; 因为已知密文B 又知道推导的对称密钥，因此可以用解密函数，获取明文A。
d.使用铭文A进行数据加密即可。

如果口令变化时，使用原始口径 先推到出明文A.
然后使用新口令对明文A 转换成密文B，存储。

总结: --- 参考总结部分2小节
已知明文A，但不存储他，而是存储他的密文B。存储到磁盘上。因为不知道口令，从而不可能将密文B转换成A，是安全的。
而使用时，使用的加密密钥是A，需要随时用口令将密文B转换成A。
每次口令变化，只需要用新的口令将A转换成B，存储起来即可。

四、使用随机数生成最安全的对称密钥
1.随机数 无论长度强、强度，都能满足保密的需求。
2.引申出一个新的问题，随机数生产的太长，不好记忆。怎么管理对称密钥。因此下一节我们讨论这个问题。

