一、背景与总结
1.各种加密算法的作用。
a.对称加密算法，用于加密/解密算法，解决“机密性”的问题。
b.单向散列函数可以解决“完整性”问题。
c.非对称加密算法,解决"安全传输加密密钥"的问题。
即非对称密码技术可以解决授权和认证的问题

2.对称加密算法 --- ChaCha20/Poly1305 -- 关注第四部分,有案例。
需要密钥,初始化向量随机数,关联信息(附加信息,可有可无,该信息可以告诉对方如何推到密钥等信息)
ChaCha20使用初始化向量，增加算法安全性。
密钥使用 算法+口令推到出来。算法内容，填充到关联信息里。
为了防止篡改，使用密文+密钥将其使用”单向散列函数“解决完整性。

3.其实因为课程内容没有非对称加密的课程。
正常密钥不需要这么麻烦，通过传递口令的方式，而是通过使用对方的公开密钥进行密钥加密，将加密结果给对方即可。

二、回顾一下约会难题
问题一：怎么能使消息不泄露？（信息保密）--- 机密性 --- 核心问题，如何对数据进行加密。
使用对称加密/解密算法，将消息加密，不会被泄露。
问题二：怎么防止内容被篡改？（信息完整） --- 将密文 + 密钥，进行”单向散列函数“处理,解决完整性。 --- 其次问题,怎么确保信息完整性
问题三：怎么证明双方的身份？（识别身份） --- 使用两个人的秘密作为口令，推到密钥。因此不传输密钥，传输密钥口令的信息，让对方可以猜到密钥是什么。
问题四：怎么防止翻脸不认账？(认证身份) --- 同问题三。
问题五：怎么确保信件能收到？(信息可用) --- 确保消息能安全传递出去。


三、对称加密,来解决机密性问题。
1.加密算法是公开的，不需要关注，但首先要解决对称密钥的安全性。即对称密钥应该如何生产。
参考17节课，总结部分，生产密钥。
a.通过机器随机数生产密钥。
b.通过用户口令,来推测密钥。
两种方法都不在磁盘上直接保留密钥。

2.加密密钥的传递
牛郎和织女，共同秘密，决定了口令，口令决定秘钥是什么。
基于口令的密钥推导算法可以使用PBKDF2。

牛郎需要告诉织女的内容:
a.秘密是什么，怎么告知织女。
b.使用什么算法去推到密钥。
算法是公开的，明文告知即可。

3.真实传递的内容
a.信件内容:xxxx,这部分需要保密。
b.如何解密


四、选择加密解密算法,并且进行加密 -- 实现
1.加密算法选择
a.安全性的考虑,密钥选择256位安全强度的算法。
b.发送的信息,即包含私密信息，又包含公开信息(密钥推导算法，加密算法等)。
c.私密信息、公开信息都不能被篡改。

因此选择使用带关联数据的认证加密算法，也就是AEAD算法。
AEAD算法可以从现在流行的三种算法里面挑选一个。选择ChaCha20/Poly1305算法。

2.算法流程
我们去查查ChaCha20/Poly1305算法需要的条件。这个算法需要四个输入数据：
即ChaCha20(对称密钥,随机数,)
a.一个256位的对称密钥；
b.一个96位的随机数；
c.明文数据,即准备加密的明文信息。
d.关联数据，也就是公开信息。

以下是依次生产算法需要的内容。

3.生成加密密钥
怎么推导出这个256位的对称密钥呢？也就是使用我们上面说到的基于口令的密钥推导算法。

基于口令的密钥推导算法可以使用PBKDF2算法，而这个算法需要五个输入数据：
a.用户的口令；
b.HMAC算法；---> 使用HmacSHA256算法,可推导出256位的密钥。
c.盐值，类似于我们讨论过的初始化向量； ---> 随机选取一个数值。
d.迭代次数; -- 1次。
e.导出密钥长度。 --> 256位。

比如:HMAC(口令,算法,盐值,迭代次数) --> 输出256位秘钥+hash值确定数据没有被篡改。 其中口令是私密的,其他都是公开信息。
用户的口令：“庚子辛巳乙亥丙子戊戌庚申甲申甲子”；
HMAC算法：“HmacSHA256”；
盐值：“3B 07 A6 CB CF 98 48 F0 68 11 28 40 E7 6F 98 66” ---> 16个16进制的字符组成,即32*4=128位随机数
迭代次数: 1；
导出密钥长度：256位。

输出256位密钥:64个16进制的字符组成。---> 所占位数 = 64 * 4 = 256位
37 af 4f bd dd 22 7c f3 bc 66 d4 c0 2c 3d e4 5a
e4 b0 da f4 58 0f 37 19 b2 31 93 63 fc 61 61 9d

4.生产 ChaCha20/Poly1305 算法需要的96位随机数
随机生产一个24个16进制数即可，即24*4=96位。
比如:一个96位的随机数：“0A 00 00 00 00 00 00 4B 00 00 00 ED”；

5.明文数据
“织女，七月初七晚七点，鹊桥相会。不见不散。牛郎字”；

6.关联数据 --- 即信件传输的格式，包含算法的选择 以及对应的参数等信息。
比如
使用ChaCha20/Poly1305算法加密。--- 告知加密算法。
随机数选取的是“0A 00 00 00 00 00 00 4B 00 00 00 ED”。--- 告知随机数。
加密密钥是使用PBKDF2算法推导出256位的对称密钥。 ---- 告知密钥如何生产。
	PBKDF2算法的用户口令，使用的男孩和女孩的生辰八字
	HMAC算法使用的是HmacSHA256算法
	盐值选取的是“3B 07 A6 CB CF 98 48 F0 68 11 28 40 E7 6F 98 66”
	迭代一次
加密数据内容.... --- 告知加密内容。


五、四解决了信息加密的问题，那其他四个问题需求该如何解呢?
1.怎么防止内容被篡改。
由于这封信采用的是带关联数据的认证加密算法，无论是信的私密内容，还是公开内容，都没有办法被篡改而不被察觉。信息完整的问题，我们也解决了。

2.怎么证明双方的身份
由于孩子的生辰八字只有孩子的父母知道，牛郎知道，只有织女才能读到这封信的约会信息；而织女也知道，只有牛郎才能这样加密约会信息。身份证明的问题，我们就解决了。

3.怎么防止翻脸不认账？
织女如何确保信息是牛郎发的？---> 密钥口令是两个人共同秘密，接收方能解密，说明对方一定是牛郎发的。
牛郎怎么确认织女收到了信? ---> 作者没有给出结论，说留给思考题。我猜的结果是 让织女给一个回复，牛郎可以解析，则说明不能翻脸不认账。

4.怎么确保信件能收到？
遗憾的是，这个问题并没有彻底地得到解决。
由于发信人、收信人以及信件的真实内容都没有泄露，别人截留这封信件的动机可能就没有那么强烈，这个方案提高了信件送达的概率。
