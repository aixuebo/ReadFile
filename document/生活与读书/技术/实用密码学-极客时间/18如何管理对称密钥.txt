一、背景与总结
1.随机数生产的密钥，在强度和长度上都非常安全，但随机数太长，不好记忆。怎么管理对称密钥。
存储在任何地方，都是不安全的，因此不能存储他。
可以通过17节，总结2中“安全的密钥生产逻辑”的方式管理。也可以通过非对称密钥的方式管理。(更推荐非对称密钥的方式)

二、不需要留存的密钥 -- 即用即弃的对称密钥
1.最推荐使用的密钥，因为没有留存，所以最安全。
2.使用场景 -- 加密数据不需要保存在磁盘上。
比如https协议传输使用的密钥。
3.不需要留存的密钥，完全可以用机器的随机数生产密钥，安全系数最高。
4.如果加密数据需要留在磁盘上，怎么能更安全的存储呢？
使用17节的知识，使用口令推导出的密钥，并且密钥再解密成更安全的随机密钥。使用随机密钥去加密。

三、需要留存的对称密钥
1.安全性是一个问题，如何保存密钥能安全呢。其实很难，甚至有人保存到芯片上。
2.不推荐使用留存密钥。
即是需要阅读权限才能读取到密钥，但也存在安全隐患。
毕竟加密算法是公开的，密钥是最核心的，因此无论如何减少别人获取密钥的机会才是最安全的，因此不推荐使用留存密钥，毕竟留存意味着有可能被泄露。

四、对称密钥管理为什么存在麻烦问题。
1.假设一个系统有三个参与者A、B和C。
如果每两人之间的通信都使用不同的密钥，那么A和B、B和C、A和B之间，都需要不同的对称密钥。也就是说，三个参与者的系统，需要3对不同的对称密钥。
类似地，我们可以计算出：
5个参与者的系统，需要10对不同的对称密钥；
10个参与者的系统，需要45对不同的对称密钥；
100个参与者的系统，需要4950对不同的对称密钥。
随着参与者的增加，需要的对称密钥数量急剧地膨胀。这种膨胀的速度，就给密钥的管理带来了很多麻烦，也会使得系统的效率急剧地下降。

2.比如100个人开umeet视频会议，大家一个会议室使用相同的一个密钥。
因此数据加密一次，发送给99个人。
如果每一个人都有不同的密钥，那也就意味着，视频的发送端，需要给每一个参会者都发送不同的加密数据。即每次使用99个不同的密钥加密，在发送给对方。


3.解决方案 -- Kerberos密钥管理系统 -- 过时了，不推荐。
Kerberos协议的使用场景，目前还在逐渐萎缩。除了单点登陆的系统之外，至少在我的认知范围内，使用Kerberos协议的新系统已经不太常见了。

4.解决方案 -- 非对称密钥的密钥交换 -- 推荐
每一个人公开自己的公钥，如果A想给B发送加密数据，则A使用随机数生成加密密钥，使用B的公钥进行加密，发送给B。
即B可以收到的是 加密的数据 + 公钥(密钥)的结果。
因此B可以拿到密钥，使用私钥解密后，就可以知道密钥了。 就可以拿着密钥去解析数据。

