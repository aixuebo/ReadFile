一、背景与总结
1.监控队列消费进度的背景
前面两节课，知道了消息队列用于消峰值，以及如何确保数据异步不会重复消费带来的影响。
但队列如果处理速度很慢，一个小时后才给处理完，用户体验上也是不可接受的。


二、如何监控消息延迟情况
1.使用消息队列提供的工具，通过监控消息的堆积来完成
Kafka提供了工具叫做“kafka-consumer-groups.sh” 了解目前队列的消费进度
./bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --describe --group test-consumer-group
输出:
topic 、partition、current-offset、log-end-offset、lag
前两列是队列的基本信息，包括topic和分区名；
第三列是当前消费者的消费进度；
第四列是当前生产消息的总数；
第五列就是消费消息的堆积数（也就是第四列与第三列的差值）

2.自己写程序实现进度跟踪 -- 更灵活
定时任务往消息队列中写入"特殊的消息"，格式就是生产端的时间戳，因此消息队列的内容就包含两类：正常数据、特殊消息。
业务处理的消费者，消费正常数据，跳过特殊消息。
监控的消费者，跳过正常数据，消费特殊消息，将当前时间戳 - 消息中生产者时间戳，超过阈值发送报警，以及dashboard上监控多久前的数据还才被消费。从而有一个延迟预期。

三、如何提升消费者效率 --- 减少消息延迟
1.优化消费者性能。
增加消费partition数量，从而可以增加消费者数量。
优化消费者代码。
增加消费者的并行度，考虑多线程处理。

2.注意消费者空转问题
如果消费队列没数据，消费者不断拉去数据，无数据继续训话拉，导致CPU跑满。
解决方案是当无数据时，sleep一段时间。也可以逐步增长sleep时间。
