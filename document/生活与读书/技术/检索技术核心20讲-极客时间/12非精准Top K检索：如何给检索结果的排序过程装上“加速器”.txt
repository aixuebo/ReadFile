一、背景与总结
1.离线计算好分数 && 默认倒排索引的posting list都是按文档ID进行排序的，我们可以让倒排索引中文章id按照分数排序。

二、什么是非精准的Top K检索？
1.想要优化打分过程，一个很自然的思路就是通过简化打分机制，来降低打分开销。但是简化之后，我们的排序结果就不精准了。
2.实际上，在工业界中，我们会使用非精准Top K检索结合精准Top K检索的方案，来保证高效地检索出高质量的结果。
就是把检索排序过程分为两个阶段：
a.我们会进行非精准的Top K检索，将所有的检索结果进行简单的初步筛选，留下k1个结果，这样处理代价会小很多（这个阶段也被称为召回阶段）；
b.就是使用精准Top K检索，也就是使用复杂的打分机制，来对这k1个结果进行打分和排序，最终选出k2个最精准的结果返回（这个阶段也被称为排序阶段）。

三、非精准Top K检索如何实现？ --- 方案1 根据静态质量得分排序截断
在非精准Top K检索中，一个降低打分计算复杂度的重要思路是：尽可能地将计算放到离线环节，而不是在线环节。这样，在线环节我们就只需要进行简单的计算，然后快速截断就可以了。

1. 根据静态质量得分排序截断例子
以搜索引擎为例，不考虑搜索词和网页之间复杂的相关性计算，只根据网站自身的质量打分排序。比如说，使用Page Rank算法离线计算好每个网站的质量分，
当一个搜索词要返回多个网站时，我们只需要根据网站质量分排序，将质量最好的Top K个网站返回即可。

2.为了能快速返回Top K个结果，我们需要改造一下倒排索引中的posting list的组织方式
默认倒排索引的posting list都是按文档ID进行排序的，我们可以让倒排索引中文章id按照分数排序。
这样直接获取topK个结果即可。

3.如果查询词是多个term，每一个term都有对应的倒排索引，索引内容也都是按照分数排序好的。
该如何merge呢?
a.第一步，我们取出每个关键词的posting list，不是取出topK，而是要全部取出。
b.第二步，我们对这两个posting list归并排序。留下分数和文档ID都相同的条目作为结果集合。
c.选择k个就结束归并排序。
当结果集合中的条目达到k个时，我们就直接结束归并。如果是查询多个关键词，步骤也一样。

为什么要筛选分数相同的文档id作为结果集呢？
因为我们要找相似的文章，而与关键词相似的文章，意味着分数是相同的，才能说明这些文章更相似。
当然这里面逻辑有一些牵强，查询java，返回java技术文章、java教学广告、java前景都可能是用户要的。
他这里完全是为了并归排序设计，考虑到索引是文章排序的，所以为了利用已排序好的结果，因此只提取分数相同的文章id，其实不可全部参考。

四、非精准Top K检索如何实现？ --- 方案2 根据词频得分排序截断
1.词频是文章的重要相关性参数，同时每一个词在不同文章内出现的词频是不同的。
因此为每一个term创建索引的时候，不以文章id排序，而是以词频排序。
说明越靠前的topN，词与文章相关性越高。
