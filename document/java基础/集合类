一、ConcurrentSkipListMap
    ConcurrentNavigableMap<Integer,String> map = new ConcurrentSkipListMap<Integer,String>();
    map.put(1, "111");
    map.put(3, "333");
    map.put(5, "555");
    map.put(7, "777");
    
    System.out.println(map.subMap(1, true, 7, false));//{1=111, 3=333, 5=555}
    System.out.println(map.subMap(1, true, 7, true));//{1=111, 3=333, 5=555, 7=777}
    
    System.out.println(map.subMap(2, true, 7, false));//{3=333, 5=555}
    System.out.println(map.subMap(2, true, 7, true));//{3=333, 5=555, 7=777}
     
    System.out.println(map.headMap(2));//{1=111}
    System.out.println(map.headMap(3));//{1=111}
    System.out.println(map.headMap(1));//{}
    
     找到距离key最小的数据,如果遇到相等的,就直接返回相等的数据
    System.out.println(map.floorKey(0));//null
    System.out.println(map.floorKey(2));//1
    System.out.println(map.floorKey(3));//3
     
    System.out.println(map.lastEntry().getValue());//777