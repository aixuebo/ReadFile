Flink的应用 关联图谱分析：如何用 Lambda 架构实现实时的社交网络分析
一、应用场景
在社交网络场景下，通过对社交网络分析，可以发现虚拟社区，评估个体影响力，探索信息传播规律等。
我们能够一目了然地发现该网络中有三个“团伙”，每个“团伙”各有 1 到 2 个“大哥”，并且三个“团伙”之间还通过“小弟”相互联系。
￼

参见图1

二、一度关联
COUNT DISTINCT（去重计数）计算，指关联图谱中的一个节点有多少个与之直接相邻的节点。
通常是为了统计一段时间内，某种属性上另一种属性不同取值的个数,比如“过去一周内在同一个设备上注册的不同用户数”。
SELECT COUNT(DISTINCT user_id) FROM stream
WHERE event_type = "create_account" 
AND timestamp >= 1530547200000 and timestamp < 1531152000000 
GROUP BY device_id;

实现方案
1.用一个集合（set）或者bitmap 来记录变量所有不同的取值。
2.HyperLogLog，Redis已实现
只需要用 12K 字节的内存，就能够在 0.81% 的标准误差范围内，记录将近 2^64 个不同值的个数。
当寄存器长度是 256 字节时，估计误差为5.63%；当寄存器长度是 128 字节时，估计误差为 7.96%。
HyperLogLog 算法的插入和查询的时间复杂度都是 O(1) ，所以在时间方面 HyperLogLog 算法也能够完全满足实时计算的要求。

在 Redis 中， HyperLogLog 算法提供了三个命令： PFADD 、PFCOUNT 和 PFMERGE 。
PFADD 用于将元素添加到 HyperLogLog 寄存器；
PFCOUNT 用于返回添加到 HyperLogLog 寄存器中不同元素的个数（是一个估计值）；
PFMERGE 则用于合并多个 HyperLogLog 寄存器。用于多个时间窗口内的不同值个数汇总。

三、二度关联
比如“过去 30 天在同一个设备上注册的用户登录过的设备数”
暂时实时能力弱，只能用Lambda 架构实现该统计需求