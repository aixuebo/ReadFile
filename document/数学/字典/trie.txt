不是二叉树，而是多叉树。
比如全都是英文组成的单词,则root下26叉树,每一个字母又拆分26叉树。

属于前缀搜索。每一个单词有核心的几个属性,标识是否是单词叶子节点，该单词出现次数。--用于计算词频。
也可以使用全局ID，为每一个出现的单词标注唯一ID。

缺点:
树很大的时候,超出内存限制,目前没有想好如何做到并行创建Trie，同时即使并行创建了N个Trie，获取某个词的唯一ID或者词频的时候，该如何加载呢？
因此没有办法做到数据量很大的场景下,为字符串生成唯一ID。
