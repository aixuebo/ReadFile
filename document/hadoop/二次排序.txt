参见 odsdata_etl_hadoop项目
InterestRecordSecondSortDriver

1.要有一个自定义对象,first seconde两个属性,并且按照first-seconde进行排序,map的key就是该对象
因此map过后可以保证到reduce中该对象first-seconde是有序的。
2.重新写一个PARTITION
job.setPartitionerClass(StringStringPartation.class);
因此只要保证该FIRST-seconde在同一个文件里面,即在同一个PARTITION里面就可以了，因此按照FIRST进行PARTITION就可以保证这点,因此重写PARTITION
3.重新写一个group
job.setGroupingComparatorClass(StringStringGroup.class);
因为虽然FIRST-SECOND都在同一个PARTITION中,并且按照顺序已经排列好了,但是没有办法让他们在同一个reduce方法里面，
该方法只让FIRST相同即可表示相同的FIRST就在同一个reduce中了



注意问题:
1.因为3,同一个reduce中的KEY就是最后一个FIRST-SECOND,因此SECOND要是有用的话,应该放到VALUE中
2.如果是想要倒序,则在自定义对象中,使用后者-前者就可以了,或者在前者-后者前面加一个负号
例如
    public int compareTo(StringStringCompare o) {
        int result = this.getFirstKey().compareTo(o.getFirstKey());
        return result!=0 ? result : -this.getSecondKey().compareTo(o.getSecondKey());  
    }  

