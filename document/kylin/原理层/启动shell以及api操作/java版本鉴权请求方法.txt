import org.apache.kylin.jdbc.shaded.org.apache.commons.codec.binary.Base64;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.charset.Charset;


public class KylinApiUtil {

    static String encoding;
    StringBuffer refreshBuffer = new StringBuffer();
    private static final String kylinIp ="10.1.5.83:7070";

    /**
     * 通过httpClient方式调用kylin Restful接口
     */
    public static StringBuffer excute(String kylinIp, String para, String method, String params) {
        StringBuffer out = new StringBuffer();
        try {
            URL url = new URL("http://" + kylinIp + "/kylin/api" + para);
            System.out.println(url);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod(method);
            connection.setDoOutput(true);
            connection.setRequestProperty("Authorization", "Basic " + encoding);
            connection.setRequestProperty("Content-Type", "application/json;charset=UTF-8");
            if (params != null) {
                byte[] outputInBytes = params.getBytes("UTF-8");
                OutputStream os = connection.getOutputStream();
                os.write(outputInBytes);
                os.close();
            }
            InputStream content = (InputStream) connection.getInputStream();
            // 解决乱码问题
            BufferedReader in = new BufferedReader(new InputStreamReader(content, Charset.forName("UTF-8")));
            String line;
            while ((line = in.readLine()) != null) {
                out.append(line);
            }
            in.close();
            connection.disconnect();

        } catch (Exception e) {
            e.printStackTrace();
        }
        return out;
    }

    /**
     * 登录kylin，输入身份认证，默认用户名为ADMIN，密码为KYLIN
     *
     * @return
     */
    public static StringBuffer login() {
        String method = "POST";
        String para = "/user/authentication";
        byte[] key = ("ADMIN:KYLIN").getBytes();
        encoding = Base64.encodeBase64String(key);
        return excute(kylinIp, para, method, null);
    }

    /**
     * 获取cube下的所有segment
     *
     * @param cubeName
     * @param params
     * @return
     */
    public static StringBuffer getSeg(String cubeName, String params) {
        login();
        String method = "GET";
        String para = "/cubes/" + cubeName;
        return excute(kylinIp, para, method, params);
    }
}
