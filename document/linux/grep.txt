1.搜索指定关键词,但是不知道他在哪个文件中
grep -w "easou" click_data.20140716.*
搜索包含"sasou的文件名"

2.grep -A5 -w 8088 *
A表示append,即找到符合的行后,追加5行都显示

3. grep -B5 -w 8088 *
B表示Before,即找到符合的行后,前5行显示

4.grep -n 8088 *
-n表示显示在文件中的行号

5.-i 忽略大小写

6.-r 是递归查找 -R 查找所有文件包含子目录

7.例子
\< 和 \> 分别标注单词的开始与结尾。
例如：
grep man * 会匹配 ‘Batman’、‘manic’、‘man’等，
grep '\<man' * 匹配‘manic’和‘man’，但不是‘Batman’，
grep '\<man\>' 只匹配‘man’，而不是‘Batman’或‘manic’等其他的字符串。
'^'：指匹配的字符串在行首，
'$'：指匹配的字符串在行尾，

8.grep -lR   "some_code"  path
grep -R   "some_code"  path
如果你不需要显示内容，只需要含有某个字符的文件：
附录：
grep -R 和 -l 参数
　　-R, -r, --recursive
递归地读每一目录下的所有文件。这样做和 -d recurse 选项等价。
　　-l, --files-with-matches
禁止通常的输出；作为替代，打印出每个在通常情况下会产生输出的输入文件的名字。对每个文件的扫描在遇到第一个匹配的时候就会停止。

demo
grep -l sdfsdf /root/upload/metadata/metamap/*

9.查看源代码
find . -name '*.java' | xargs grep --color 'main(' | awk '{print $1}' | uniq | grep -v test