一、scala调用java,java的方法参数是int[],可直接使用scala的Array[Int],不用隐式转换
  def testJava(): Unit ={
    val arrInt : Array[Int] = Array(2, 1, 3) //初始化
    java.util.Arrays.sort(arrInt) // java需要参数数组,scala直接使用 sort(int[] a)
    arrInt.foreach(println(_)) // 1 2 3
  }
  
二、scala调用java,参数是ArrayList或者list的时候,可以使用scala的ArrayBuffer代替。
java的返回值是List的,可以使用scala的Buffer代替。

  /**
    * 调用java的方法,java方法参数ArrayList,返回值List
    * scala想要调用java的方法:
    */
  def testJavaMethod(): Unit ={

    import scala.collection.JavaConversions.bufferAsJavaList
    import scala.collection.mutable.ArrayBuffer

    val command = ArrayBuffer("ls", "-al", "/home/cay")
    val pb = new ProcessBuilder(command) // Scala到Java的转换 --- ProcessBuilder(List<String> command)

    //注意:java返回值是List的,scala不能使用ArrayBuffer——包装起来的对象仅能保证是个Buffer
    import scala.collection.JavaConversions.asScalaBuffer
    import scala.collection.mutable.Buffer
    val cmd: Buffer[String] = pb.command() //java返回值public List<String> command()
  }
  
