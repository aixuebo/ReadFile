
TODO
1.汇总模型生产的是依赖union all操作,这样会造成代码没有效率。如何提高优化效率。
2.明细层建模时,维度属性，设置成维度感觉不如设置成指标好用呢？比如不同日期内，商家名称可能是不一样的,因此汇总模型使用商家名称作为维度时,group by 商家名称就会出现问题。
如果是指标,则max(商家名称)就会正确。


第一部分 --- 管理
一、内容
1.数仓分层
中文名 && 英文名
允许依赖关系
映射分层A B3 B2 B1 C 

2.主题 --- 用于为表打标,属于什么主题的表
中文 && 英文名


3.自定义标签
为业务或者技术自己定义标签，用于快速指标或者表的查找。相当于微信的收藏里面的标签功能。

4.标准字段 --- 统一标注字段名称,整个数仓命名统一名字
中文 && 英文名

5.词根
字段命名的一部分，用词根拼接成标准字段;检查字段命名规范。
中文 && 英文名

二、功能
1.表命名标准化
设置命名分几段,每一个段命名规则。
比如:数据分层+业务主题+用户自己输入+自定义枚举器用户选择。

2.模型基本信息配置 -- 必填 选填 不使用
是否一定打标业务主题标签。
是否一定有模型描述。
是否要加入自定义标签
是否要有时间分区。


第一部分 --- 数据建模
一、通用模型 ---相当于ODS、FACT层 -- 创建模板DDL,即生成建表语句,因此需要输入表英文名、描述、字段、分区信息。
a.只创建DDL,以及表模板,具体表字段的内容要自定义sql写入。

1.配置基础信息
a.表中英文名称(包含规则校验)、表描述。
b.表所归属分层。
c.表是否有分区。
d.表打标:包含自定义标签、归属主题标签。

2.追加字段
a.选择已经存在的表,加载,选择要的字段,同步过来。避免了手动创建,造成的字段类型不一致;手动操作累。
b.自己追加字段。(字段中文、英文、类型、描述、是否分区、是否主键)
c.拖拽字段顺序。
d.设置主键、分区字段标识。

3.其他功能
a.通过DDL建表语句,创建字段。
b.字段检测,检查字段命名规范性。


二、明细模型 --- 相当于AGGR层 --- 使用维度建模方式创建的表,即表里有维度+维度属性+指标
支持left join等复杂操作。

a.逻辑模型,不会产生具体的ETL任务,只是维护逻辑sql。
b.明细模型分 事实模型 、维度模型。
c.录入信息
模型描述内容、模型中英文(表名)、表备注、表所属分层、表标签、表归属主题、表分区、字段从已有fact层模型拉去。即通用层拉去。
d.字段绑定维度+维度属性+维度指标信息。 --- 如果字段没有绑定,则下游汇总层不会拿来使用。
e.这层本质就是生产left join后的明细数据，即结果就是一个表，有维度、有指标标识，以及知道指标如何参与计算。

比如
1.建立联系 -- 生产temp表
select 字段1,字段2,字段3,字段4
from A
join B on A.id = B.id

2.如果下游使用该明细表,仅仅想查询维度:字段1,指标字段4,则默认下游会使用如下sql:
select 字段1,sum(`t_0`.字段4) as `具体绑定的指标名称`
from temp ---下游永远用到的只是这个temp明细表(没有聚合内容),聚合内容是依赖汇总模型配置时,使用的。
group by 字段1


三、汇总模型 --- 相当于topic层或者app层数据 --- 使用维度建模方式创建的表,即表里有维度+维度属性+指标 --- 使用明细层数据,进行聚合
该模型只会支持union all操作,不存在left join等操作。因为一切的假设都在相同维度下,获取指标,因此维度+指标都已经在明细层处理好了
a.会产生具体的ETL任务，自动生成代码 以及 同步代码落地,每日执行代码。
b.录入信息:
模型描述内容、模型中英文(表名)、表备注、表所属分层、表标签、表归属主题、表分区、字段从已有明细层模型拉去。

1.注意事项
a.比如最终汇总模型的数据来自于 多个明细模型,因此支持多模型选择，然后选择多模型公共的维度，在公共维度下，选择指标。
因此生产了维度+指标的信息。指标按照明细模型提供的聚合方式进行聚合。
b.如果多模型的公共维度不存在,则提示，无法建模。
c.多模型选择后,自动生产union all方式构建模型sql。---只是代码执行效率有待优化。
d.一切的假设条件,汇总模型能准确输出结果,前提条件是依赖的都是明细层数据。即明细模型的聚合方式，放到什么场景下，都是没有问题的。

假设:
明细模型A,有id、name、a_age三个维度,可sum的value1和value2两个指标。
明细模型B,有id、name、b_age三个维度,可sum的value3和value4两个指标。

因此当汇总模型C,选择模型A和B后,选择公共维度id、name,指标value1、value2、value3、value4.
生产以下代码:

with temp1 {
	select id、name、value1、value2 ### 提取汇总模型需要的字段
	from 
	(
	    ###全部拉逻辑sql的明细模型
		select id、name、a_age、value1、value2
		from A
	) temp1
}

with temp2 {
	select id、name、value3、value4 ### 提取汇总模型需要的字段
	from 
	(
	    ###全部拉逻辑sql的明细模型
		select id、name、b_age、value3、value4
		from B
	) temp2
}

### 真正根据明细数据做聚合
select id、name,sum(value1) value1,sum(value2) value2,sum(value3) value3,sum(value4) value4
from
(
	### 拉去明细数据,把明细数据字段拉平,使用null填充空白
	select id、name,value1,value2, null value3,null value4
	from temp1
	union all
	select id、name,null value1,null value2,value3,value4
	from temp2
) a
group by id、name
