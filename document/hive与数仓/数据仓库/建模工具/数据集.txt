一、数据模型
数据模型就是hive表。
更精确的表述，应该是标识好指标、维度的hive表。


二、数据集的意义 --- 带标注维度/指标的hive表
1.hive表可以非常专一，比如维度id+指标集合；维度表。
2.当使用topic集市时，建议使用from 维度表+指标表的形式完成。
此时如果用户写sql,就比较麻烦。每次都要join。
因此hive表创建视图可完成这部分工作。
3.数据集就完成视图的作用即可。
即在数据集配置各种表关联关系。

三、数据集的功能
1.基于hive表的组合，创建数据集。
2.数据集不用关注标识好的维度和指标，而就是hive表的字段都可以标注好维度+指标即可。
3.基于多个hive表，同维度的，可以创建多维数据集的union all形式。 即多维汇总表。
此时真实情况不是union all，因为他会先将数据组装好，在查询，很耗费性能。
数据集相当于分别调用hive表数据接口，将查询结果union all。
因此保证每一个hive表足够快即可保证多维汇总表的结果是快的。
4.基于sql创建数据集
即可以不用基于物化的hive表创建数据集，相当于视图。
优势应该是不要让用户自定义字段的描述，而是通过把依赖的hive表字段描述带过来的方式实现。

5.数据集的字段顺序可以随意拖放。
hive的视图一旦创建后，字段位置是可以随意变化的，比如维度在前，指标在后。 数据集要有这个能力。

6.数据集要有where条件筛选器能力。

7.数据集要设置维度属性，比如只是维度是日期维度。

8.数据集中，指标的汇总方式，比如sum、count、count(distinct),不要让用户每一次一个个点配置。
比如100个指标，一个个点很吃力，而且可能看名字不知道要sum还是count(distinct)。
因此需要可以根据schema的描述(可以规范描述规则)，自动设置指标统计类型吗，比如count distinct。

9.数据集可以集成指标系统，避免在多个数据集重复配置计算指标。
即计算指标已经在指标系统配置好，知道依赖什么维度，什么指标做计算，当数据集满足指标和维度条件时，对应的计算指标应该自动可被用户使用。

