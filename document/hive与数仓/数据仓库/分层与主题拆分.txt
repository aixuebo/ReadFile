一、背景与总结
1.主题拆分
业务主体Fact、分析主题aggr。
a.topic是主要给业务服务的整合表。
b.有时候数据模型是延后的,所以业务会有查询aggr分析主题的场景，以及查询fact明细主题的场景。
c.topic表权限过大，有些业务只能看到某一个分析主题的数据指标。所以此时开放aggr也是合理的。
d.app层简单包装，不能有逻辑计算。


二、三范式建模:
1属性值不可再分，一列里面不能包含多个小列。即字段是不可拆分的最小粒度。
2.存在唯一主键,表之间通过主键做关联。
3.所有字段都完全依赖主键,不得依赖其他字段。即其他字段都是主键对应的属性。

常见建模方式:
ER建模:常用于业务数据库建模。实体、属性、关系。
维度建模:常用于大数据建模。允许冗余一些数据做宽表。避免范式操作的过多关联操作，可以实现高度的并行化。
星型模式,以一个事实表为中心，周围环绕着多个维度表。
雪花模式。

分层
1.简单点儿，直接ODS+DM就可以了。
2.当DM层的内容多了以后，想要重用，就会再拆分一个公共层出来，变成3层架构。
3.ODS接入数据，B3明细数据，只加工原子指标，B2属于Aggr层，业务过程进行聚合，尽量不进行维度退化。B1数据集市topic宽表，进行数据维度退化处理。


数仓分层的意义:
访问性能：能够快速查询所需的数据，减少数据I/O。
数据成本：减少不必要的数据冗余，实现计算结果数据复用，降低大数据系统中的存储成本和计算成本。
数据质量：改善数据统计口径的不一致性，减少数据计算错误的可能性，提供高质量的、一致的数据访问平台。

ODS层，简单的接入数据，不做任何修改，方便问题发现与溯源。至于数据的去噪，去重，异常值处理等过程可以放在后面的DW层
表名的设计:ODS_业务系统_表名_标记，标记一般指的是其他数仓特有的属性，例如表是天级的还是小时的，是全量的还是增量的。


DW统一数仓层
细分数据明细层DWD(fact) 和轻度汇总层DWS(aggr)。定义了一致的指标、维度，并通过一致性维度和数据总线来保证各个子主题的维度一致性。
维度所描述业务相关性强的字段在一个物理维表实现。
DWD明细数据层数仓建设的核心。DWD层要做的就是将数据清理、整合、规范化、脏数据、垃圾数据、规范不一致的、状态定义不一致的、命名不规范的数据都会被处理。
DWS轻度汇总层,为公共汇总层。基于DWD层上的基础数据，整合汇总成分析某一个主题域的服务数据，DWS层应覆盖80%的应用场景，这样我们才能快速响应数据需求

DM 数据集市层(topic)
主要是提供数据产品和数据分析的数据，主要解决部门用户报表和分析需求而建立数据库，数据集市就代表数据仓库的主题域。
DM是面向单个主题的，所以它不会从全局考虑进行建设，只专注于自己的数据、往往是某个业务线，例如流量主题、社交主题、电商主题等等。

ADS数据应用层(app)，数仓层、DIM层、TDM层是相对稳定的，所以无法满足灵活多变业务需求。app层专门为单独的业务开放。

TDM标签数据层
标签的分类:属性标签，统计标签，算法标签，关联标签。
属性标签:对象本身的性质就是属性标签，例如用户画像的时候打到用户身上的标签。
统计标签:对象在业务过程中产生的原子指标。
算法标签:特征规律通过一定的算法产出的标签。
关联标签:对象在特定的业务过程会和其他对象关联，关联对象的标签也可以打在主对象上。


------
ODS:数据接入层
DWD：data warehouse detail 数据明细层,对ODS层简单清晰 -- 感觉是FACT层
DWM：data warehouse 中间数据层,对明细数据按照常用维度进行轻度汇总-- 感觉是aggr层
DWB：data warehouse base 数据基础层，存储的是客观数据，一般用作中间层，可以认为是大量指标的数据层。 ---感觉DWB与DWM相同
DWS：data warehouse service 数据集市，数据服务层，保留更少的维度，增加更多的指标,提供更多的时间力度维度(dt、week、mo等)。
整合汇总成分析某一个主题域的服务数据，一般是宽表。topic 汇总数据层
ADS 应用数据层



ODL:Operational Data Layer,数据接入,数据内容与原始数据内容相同。
IDL:Integrated Data Layer,集成数据层,基于业务主题划分,比如poi、商品，订单等主题建设各不同的模型，完成数据整合，提供统一的基础数据来源。fact
CDL:Component Data Layer,元件数据层,在业务分析领域建模,跨多业务主题,目标为了业务分析，因此指标和维度口径在该阶段确定。aggr
面向分析主题的、统一的数据访问层，所有的基础数据、业务规则和业务实体的基础指标库以及多维模型都在这里统一计算口径、统一建模，大量基础指标库以及多维模型在该层实现。该层级以分析需求为驱动进行模型设计，实现跨业务主题域数据的关联计算或者轻度汇总计算，因此会有大数据量的多表关联汇总计算。
MDL	Mart Data Layer	数据集市层	该层次主要功能是加工多维度冗余的宽表（解决复杂的查询）、多维分析的汇总表。topic
ADL	Application Data Layer	应用数据层	该层级的主要功能是满足业务方的需求；在该层级实现报表（海豚、星空、邮件报表）、自助取数等需求。app
DIM	Dimension Data Layer	维度层	该层主要存储简单、静态、代码类的维表，包括从OLTP层抽取转换维表、根据业务或分析需求构建的维表以及仓库技术维表如日期维表等。


表命名分层	数仓分层	公司分层
origin	    ODS		ODL
fact		DWD		IDL
aggr		DWS		CDL
topic		DM		MDL
app			ADS		ADL

ODS层,接入数据，保持原有表数据结构。
fact层,清洗ODS层数据，并追加一些is_判断的字段，以及做一些简单的left join表信息，强化主体实体能力。但没有聚合信息。使用3F范式建模。
aggr层,使用维度建模方式,表内以维度+维度属性+指标的方式构建表,统一维度下指标口径。
topic层,数据集市层,进行多维分析。



fact:面对业务主题拆分与建设,比如订单、poi等；指标尽量收口；
aggr:面对分析主题--比如用户下单行为、用户在某些店铺的分析对象行为、某一个区域的商家建设分析主题。
建立几套<事实表+维度表>
topic:数据集市,把同一个业务主题下,多个分析主题公用的指标+维度拉平宽表。

