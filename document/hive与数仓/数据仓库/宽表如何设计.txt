一、宽表的好处:
1.可以更好的发挥大数据框架的能力,可以更好的利用大数据处理框架的处理能力，避免范式操作的过多关联操作，可以实现高度的并行化
2.提高开发效率,在宽表的基础上做一些开发，那就很方便，我们直接从宽表里面取数据，避免了我们从头计算。
3.提高数据质量,宽表的准确性，一般都是经历了时间的检验的，逻辑错误的可能性很小，可以直接使用。
4.统一指标口径。
5.基于宽表做报表开发才是正确的姿势。

二、宽表的不足:
1.宽表的数据输入是有大量依赖的上游,查询和处理的数据量大,导致我们的宽表往往运行很慢，资源占用很多，尤其是重跑的时候。
2.稳定性不高,系统的稳定性是取决于最差的一个环节的，这就是短板理论也叫木桶理论，我们的宽表依赖太多，每一个表的不稳定性都会传到到宽表。
3.维护成本高,由于业务逻辑的变更我们也需要去维护着复杂的逻辑，例如每次都让你在几千行的SQL 里面加逻辑。

三、如何设计宽表:如何从设计的角度来避免宽表的不足之处。
1.宽表到底多宽:我们与其回答多宽这个问题，不如回答宽表都应该覆盖哪些数据。
但是这个问题也不好回答，但是我们可以反着思考，宽表不应该包含什么数据，这个问题很好回答，宽表不应该包含不属于它所在域的数据。
例如会员域的宽表只应该包含会员相关的信息，同理我们的宽表是针对某一个域而言的，也就是说它是有边界的。
这下我们再来回答宽表到底多宽，只要不跨域，并且方便使用都是合理的。
2.主次分类,类似DDD。--- 提高维护性
假设我们做的是一个会员域的宽表，但是会员域是还是一个比较大的概念,那我们就拆分。
拆分可以让我们更加聚焦表的主题，对于数仓开发人员而言可以更好的维护、对于使用方而言可以更加清楚的理解这张表的主题。
宽表基于拆分后的子表做聚合。这样高内聚,低耦合。
3.冷热分离 --- 提高维护性
假设我有一张宽表，里面有200个字段，有30张报表在使用它，但是我发现前面150个经常字段经常被使用，后面 50个字段只有一两张报表使用到了，那么我们就可以做一个冷热分离，将宽表拆分。
4.稳定与不稳定分离 -- 提高稳定性
核心是基于时间的就绪性进行拆分。
我们经常有这样的宽表，它依赖埋点数据，但是我们的埋点数据的特点就是量大，导致计算经常延迟，那么我们的宽表就会受影响，从而我们的报表就受影响，
但是很多时候你发现报表根本没有用过埋点计算出来的指标，或者是只用了一两个。那我们可以将其拆分。